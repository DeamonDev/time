Before release:

1. Check milestone is complete

    https://github.com/haskell/time/milestones

2. Pull upstream changes

    git checkout master
    git pull

3. Update version numbers

    https://pvp.haskell.org/
    time.cabal
    configure.ac

4. Update changelog, add current UTC date

    changelog.md

5. Use correct GHC versions & latest LTS resolver

    https://www.stackage.org/lts
    stack.yaml
    fullcheck
    fullcheck.ps1
    .github/workflows/ci.yml

6. Use latest stack

    stack upgrade
    stack --version

7. Format source

    ./format-all

8. Build & test

    ./fullcheck

9. Run benchmarks

    stack bench

10. Inspect generated haddock

    `stack path --local-doc-root`/index.html

11. Commit and push changes to repo

    git commit -a
    git push

12. Check builds (these can be done in parallel)

12a. Check GitHub build

    https://github.com/haskell/time/actions

12b. Build and test on 32-bit Linux machine

    stack upgrade
    stack --version
    git pull
    ./fullcheck

12c. Build and test on FreeBSD machine

    stack upgrade
    stack --version
    git pull
    ./fullcheck

12d. Build and test on Windows

    (in PowerShell)
    Set-ExecutionPolicy -Scope CurrentUser RemoteSigned
    stack upgrade
    stack --version
    git pull
    .\fullcheck

13. Upload to Hackage

    git clean -dXf
    autoreconf -i
    stack upload .
    http://hackage.haskell.org/package/time

14. Tag commit

    git tag -a -s VERSION -m "Version VERSION"
    git push --tags

15. Update ghc branch

    git checkout ghc
    git merge master
    git push

16. Restore local branch for next development

    git checkout master

17. Close completed milestone

    https://github.com/haskell/time/milestones
